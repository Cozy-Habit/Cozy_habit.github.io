console.log("Hello World");const menuHome=document.querySelector(".home"),menuWork=document.querySelector(".work"),buttonWork=document.querySelector(".button"),menuAbout=document.querySelector(".about"),buttonHabitual=document.querySelector("#habitual");menuHome.addEventListener("click",(()=>{window.location.replace("https://cozy-habit.github.io/")})),menuWork&&menuWork.addEventListener("click",(()=>{window.location.replace("https://cozy-habit.github.io/#mywork")})),menuAbout.addEventListener("click",(()=>{window.location.replace("https://cozy-habit.github.io/about.html")})),buttonWork&&buttonWork.addEventListener("click",(()=>{window.location.replace("https://cozy-habit.github.io/#mywork")})),buttonHabitual&&buttonHabitual.addEventListener("click",(()=>{window.location.replace("https://cozy-habit.github.io/habitual.html")}));const sections=document.querySelectorAll("section"),navLi=document.querySelectorAll("nav a");window.addEventListener("scroll",(()=>{let e="";sections.forEach((t=>{const o=t.offsetTop,n=t.clientHeight;window.scrollY>=o-n/3&&(e=t.getAttribute("id"))})),navLi.forEach((t=>{t.classList.remove("active"),t.classList.contains(e)&&t.classList.add("active")}))}));const nav=document.querySelector(".primary-navigation"),navToggle=document.querySelector(".mobile-nav-toggle"),sidebar=document.querySelector("aside");navToggle.addEventListener("click",(()=>{console.log("funktioniert");const e=nav.getAttribute("data-visible");"false"===e?(nav.setAttribute("data-visible",!0),navToggle.setAttribute("aria-expanded",!0),sidebar.style.zIndex="-1"):"true"===e&&(nav.setAttribute("data-visible",!1),navToggle.setAttribute("aria-expanded",!1),sidebar.style.zIndex="1")}));const sections_productpage=document.querySelectorAll("section"),nav_productpage=document.querySelectorAll("aside div a");window.addEventListener("scroll",(()=>{let e="";sections_productpage.forEach((t=>{const o=t.offsetTop;t.clientHeight;window.scrollY>=o-135&&(e=t.getAttribute("id"))})),nav_productpage.forEach((t=>{t.classList.remove("active"),t.classList.contains(e)&&t.classList.add("active")}))})),document.getElementById(habitual)&&(document.querySelector("nav .work").classList.add("active"),console.log("working"));const observer=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&(e.target.classList.add("show"),console.log(e.target.classList))}))})),hiddenElements=document.querySelectorAll(".hidden-animate-Y, .hidden-animate-X");hiddenElements.forEach((e=>observer.observe(e)));
//# sourceMappingURL=script.js.map